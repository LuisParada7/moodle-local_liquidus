/**
 * Liquidus Router module. Routes events to trackers.
 *
 * @copyright Copyright (c) 2020 Open LMS
 * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("local_liquidus/router",["jquery","core/log","core/ajax","core/notification"],(function($,Log,ajax,notification){const self=this;return self.trackers=[],self.eventDefArray=[],self.initRun=!1,self.eventsLoaded=!1,self.registerTracker=function(tracker){Log.debug("[".concat(tracker.trackerInfo.trackerId,"] Registering tracker")),self.trackers[tracker.trackerInfo.trackerId]=tracker,tracker.identify(),tracker.trackPage(),tracker.heartBeat&&setInterval(tracker.heartBeat,1e4),self.addEventTracking(tracker.trackerInfo.trackerId)},self.init=function(){const dfd=$.Deferred();if(self.initRun)return self.whenTrue((()=>self.eventsLoaded),(()=>{dfd.resolve()}),!0),dfd;self.initRun=!0;const promises=ajax.call([{methodname:"local_liquidus_event_definition",args:{}}]);return $.when(...promises).done((function(data){data.forEach((trackerDef=>{self.eventDefArray[trackerDef.provider]=trackerDef})),self.eventsLoaded=!0,dfd.resolve()})).fail((function(ex){notification.exception(ex),dfd.resolve()})),dfd},self.addEventTracking=function(trackerId){const trackerDef=self.eventDefArray[trackerId];if(void 0===trackerDef)return void Log.debug("[".concat(trackerId,"] No custom events configured."));const tracker=self.trackers[trackerId];trackerDef.definition.forEach((eDef=>{Log.debug("[".concat(trackerDef.provider,"] Looking for selector: ").concat(eDef.testselector)),$(eDef.testselector).length&&self.processDefinition(tracker,eDef)}))},self.processDefinition=(tracker,edef)=>{const trackerId=tracker.trackerInfo.trackerId;Log.debug("[".concat(trackerId,"] Adding event handling for custom event: ").concat(edef.selector," -> ").concat(edef.event)),$(edef.selector).on(edef.event+".dataTracking",(function(evt){const preventEvents=$(this).is("a")&&!$(this).attr("href").startsWith("#");preventEvents&&evt.preventDefault();const parentNode=$(this);Log.debug("[".concat(trackerId,"] Tracking custom event: ").concat(edef.selector," -> ").concat(edef.event));var data={};for(let i in edef.data){const ddef=edef.data[i];Log.debug("[".concat(trackerId,"] Looking for '").concat(ddef.selector,"' value."));const ddefNode=parentNode.find(ddef.selector);ddefNode.length>0&&(Log.debug("[".concat(trackerId,"] Selector '").concat(ddef.selector,"' value.")),ddefNode.each((function(index){const dataNode=$(this);let value,id=dataNode.attr("id");void 0===id&&(id=dataNode.attr("name")),id=void 0===id?index:index+"_"+id,data[ddef.name+"_"+id]=null,value="input"===ddef.type?dataNode.val():dataNode.text(),void 0!==value&&""!==value&&null!==value&&(data[ddef.name+"_"+id]=value)})))}const dfd=$.Deferred();tracker.processEvent(dfd,edef.name,data),setTimeout((()=>{"pending"===dfd.state()&&(Log.debug("[".concat(trackerId,"] Failed to send data for: ").concat(edef.selector," -> ").concat(edef.event)),dfd.resolve())}),1e3),dfd.then((()=>{Log.debug("[".concat(trackerId,"] Processed: ").concat(edef.selector," -> ").concat(edef.event,", proceeding with event.")),parentNode.off(edef.event+".dataTracking"),preventEvents&&(parentNode.is("a")?window.location.href=parentNode.attr("href"):parentNode.trigger(edef.event))}))}))},self.whenTrue=(func,callBack,forceCallBack,maxIterations,i)=>{(i=i?i+1:0)>(maxIterations=maxIterations||10)?forceCallBack&&callBack():func()?callBack():window.setTimeout((()=>{self.whenTrue(func,callBack,forceCallBack,maxIterations,i)}),200)},{init:self.init,registerTracker:self.registerTracker}}));

//# sourceMappingURL=router.min.js.map